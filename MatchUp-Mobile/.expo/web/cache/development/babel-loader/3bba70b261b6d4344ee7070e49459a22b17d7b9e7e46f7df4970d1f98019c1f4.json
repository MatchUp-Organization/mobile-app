{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport * as React from 'react';\nimport CustomButton from \"../CustomButton\";\nimport * as WebBrowser from \"expo-web-browser\";\nimport * as Google from 'expo-auth-session/providers/google';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Navigation from \"../../navigation\";\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SocialSignInButtons = function SocialSignInButtons() {\n  var navigation = useNavigation();\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    userInfo = _React$useState2[0],\n    setUserInfo = _React$useState2[1];\n  WebBrowser.maybeCompleteAuthSession();\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    token = _useState2[0],\n    setToken = _useState2[1];\n  var _Google$useAuthReques = Google.useAuthRequest({\n      webClientId: \"871816637044-ejvmsf74rnf29sludjqr7t60tne94sam.apps.googleusercontent.com\",\n      scopes: [\"profile\", \"email\"]\n    }),\n    _Google$useAuthReques2 = _slicedToArray(_Google$useAuthReques, 3),\n    request = _Google$useAuthReques2[0],\n    response = _Google$useAuthReques2[1],\n    promptAsync = _Google$useAuthReques2[2];\n  var getLocalUser = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var data = yield AsyncStorage.getItem(\"@user\");\n      if (!data) return null;\n      return JSON.parse(data);\n    });\n    return function getLocalUser() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var getUserInfo = function () {\n    var _ref2 = _asyncToGenerator(function* (token) {\n      if (!token) return;\n      try {\n        var _response = yield fetch(\"https://www.googleapis.com/userinfo/v2/me\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        var user = yield _response.json();\n        yield AsyncStorage.setItem(\"user\", JSON.stringify(user));\n        setUserInfo(user);\n        navigation.navigate('Home');\n      } catch (error) {\n        console.error(\"Failed to fetch user data:\", response.status, response.statusText);\n      }\n    });\n    return function getUserInfo(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var onSignInFacebook = function onSignInFacebook() {\n    navigation.navigate('Home');\n  };\n  var onSignInGoogle = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var userJSON = yield AsyncStorage.getItem(\"user\");\n        if (userJSON) {\n          setUserInfo(JSON.parse(userJSON));\n          console.log(\"User info from AsyncStorage:\", JSON.parse(userJSON));\n        } else if ((response == null ? void 0 : response.type) === \"success\") {\n          getUserInfo(response.authentication.accessToken);\n        }\n      } catch (error) {\n        console.error(\"Error retrieving user data from AsyncStorage:\", error);\n      }\n      useEffect(function () {\n        onSignInGoogle();\n      }, [response, token]);\n      console.log(JSON.stringify(userInfo));\n    });\n    return function onSignInGoogle() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var onSignInApple = function onSignInApple() {\n    console.log(\"Apple\");\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(CustomButton, {\n      text: \"Sign In With Facebook\",\n      onPress: onSignInFacebook,\n      bgColor: \"#E7EAF4\",\n      fgColor: \"#4765A9\"\n    }), _jsx(CustomButton, {\n      text: \"Sign In With Google\",\n      onPress: function onPress(onSignInGoogle) {\n        promptAsync();\n      },\n      bgColor: \"#FAE9EA\",\n      fgColor: \"#DD4D44\"\n    }), _jsx(CustomButton, {\n      text: \"Sign In with Apple\",\n      onPress: onSignInApple,\n      bgColor: \"#E3E3E3\",\n      fgColor: \"#363636\"\n    })]\n  });\n};\nexport default SocialSignInButtons;","map":{"version":3,"names":["React","CustomButton","WebBrowser","Google","AsyncStorage","Navigation","useNavigation","useRoute","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","SocialSignInButtons","navigation","_React$useState","useState","_React$useState2","_slicedToArray","userInfo","setUserInfo","maybeCompleteAuthSession","_useState","_useState2","token","setToken","_Google$useAuthReques","useAuthRequest","webClientId","scopes","_Google$useAuthReques2","request","response","promptAsync","getLocalUser","_ref","_asyncToGenerator","data","getItem","JSON","parse","apply","arguments","getUserInfo","_ref2","fetch","headers","Authorization","user","json","setItem","stringify","navigate","error","console","status","statusText","_x","onSignInFacebook","onSignInGoogle","_ref3","userJSON","log","type","authentication","accessToken","useEffect","onSignInApple","children","text","onPress","bgColor","fgColor"],"sources":["/home/alexx/MatchUp-Mobile/src/components/SocialSignInButtons/SocialSignInButtons.js"],"sourcesContent":["import { View, Text } from 'react-native'\nimport * as React from 'react'\nimport CustomButton from '../CustomButton'\nimport * as WebBrowser from \"expo-web-browser\";\nimport * as Google from 'expo-auth-session/providers/google';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Navigation from '../../navigation';\nimport { useNavigation, useRoute } from '@react-navigation/native';\n\nconst SocialSignInButtons = () => {\n  \n  const navigation = useNavigation();\n  const [userInfo, setUserInfo] = React.useState(null);\n  WebBrowser.maybeCompleteAuthSession();\n  const [token, setToken] = useState(\"\");\n\n  const [request, response, promptAsync] = Google.useAuthRequest({\n\n    webClientId:\"871816637044-ejvmsf74rnf29sludjqr7t60tne94sam.apps.googleusercontent.com\",\n    scopes: [\"profile\", \"email\"]\n\n  });\n\n\n  const getLocalUser = async () => {\n    const data = await AsyncStorage.getItem(\"@user\");\n    if (!data) return null;\n    return JSON.parse(data);\n  };\n\n  const getUserInfo = async (token) => {\n    //absent token\n    if (!token) return;\n    //present token\n    try {\n      const response = await fetch(\n        \"https://www.googleapis.com/userinfo/v2/me\",\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      const user = await response.json();\n      //store user information  in Asyncstorage\n      await AsyncStorage.setItem(\"user\", JSON.stringify(user));\n      setUserInfo(user);\n      navigation.navigate('Home');\n    } catch (error) {\n      console.error(\n        \"Failed to fetch user data:\",\n        response.status,\n        response.statusText\n      );\n    }\n  };\n\n  const onSignInFacebook = () => {\n    navigation.navigate('Home');\n  }\n\n  const onSignInGoogle = async () => {\n    try {\n      // Attempt to retrieve user information from AsyncStorage\n      const userJSON = await AsyncStorage.getItem(\"user\");\n  \n      if (userJSON) {\n        // If user information is found in AsyncStorage, parse it and set it in the state\n        setUserInfo(JSON.parse(userJSON));\n        console.log(\"User info from AsyncStorage:\", JSON.parse(userJSON));\n      } else if (response?.type === \"success\") {\n        // If no user information is found and the response type is \"success\" (assuming response is defined),\n        // call getUserInfo with the access token from the response\n        getUserInfo(response.authentication.accessToken);\n      }\n    } catch (error) {\n      // Handle any errors that occur during AsyncStorage retrieval or other operations\n      console.error(\"Error retrieving user data from AsyncStorage:\", error);\n    }\n    //add it to a useEffect with response as a dependency \n    useEffect(() => {\n      onSignInGoogle();\n    }, [response, token]);\n    //log the userInfo to see user details\n    console.log(JSON.stringify(userInfo))\n  };\n\n\n    const onSignInApple= () => {\n      console.log(\"Apple\");\n    }\n\n\n  return (\n  <>\n      <CustomButton \n      text= \"Sign In With Facebook\" \n      onPress={onSignInFacebook}\n      bgColor=\"#E7EAF4\"\n      fgColor=\"#4765A9\"\n      />\n      \n      <CustomButton \n      text= \"Sign In With Google\" \n      onPress={onSignInGoogle => {promptAsync()}}\n      bgColor=\"#FAE9EA\"\n      fgColor=\"#DD4D44\"\n      />\n\n      <CustomButton \n      text= \"Sign In with Apple\" \n      onPress={onSignInApple}\n      bgColor=\"#E3E3E3\"\n      fgColor=\"#363636\"\n      />    \n  </>\n)\n}\n\nexport default SocialSignInButtons"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}